#! /bin/bash

if ( test ${#1} == 0 ) then
  echo "Usage MakeBook <valid_PS_file_name> [-ds] "
  echo "               the option [-ds] will produce a double-sided output file"
  exit
fi

psfile=`basename $1 .ps`

if ( test -e ${psfile}.ps ) then
  echo "${psfile}.ps" | awk '{ printf "Processing \"%s\" ...\n",$1}'

#  ----------------------- check for postscript format ...

  psflag=`head -1 ${psfile}.ps | awk '{ if(substr($1,3,9)=="PS-Adobe-") print "1"; else print "0";}'`
  if ( test ${psflag} == 0 ) then
    echo "${psfile} }.ps" | awk '{ printf "Error: input file \"%s\" is not a PostScript file!\n",$1}'
    exit
  fi

  awk 'BEGIN {o=1; n=1; i=3; p=0; l=0} \
       { lineout=$0; \
         if($1=="%%Page:") \
         { o=0; \
           if(n==$2) \
           { o=1; n+=i; i=(i+2)%4; \
             if(i==1) { l=0; p++; printf "#%04d#0#%05d#%%%%Page: %d %d\n",p,l++,p,p; lineout="0.707 0.707 scale 90 rotate 598 -840 translate gsave"} \
             if(i==3) { lineout="grestore -594 0 translate gsave"} \
           } \
         } \
         if(($1=="showpage")&&(i==1)) lineout=""; \
         if($0=="%%EOF") o=0; \
         if(o==1) printf "#%04d#0#%05d#%s\n",p,l++,lineout;\
       } \
       END { if(i==1) print "grestore showpage"; print "%%EOF" }' ${psfile}.ps > ${psfile}.0.tmp
       echo "  generated pre-postscript file -- ${psfile}.0.tmp -- "
         
  awk 'BEGIN {o=1; n=2; i=1; p=0; l=0} \
       { lineout=$0; \
         if($1=="%%Page:") \
         { o=0; \
           if(n==$2) \
           { o=1; n+=i; i=(i+2)%4; \
             if(i==3) { l=0; p++; printf "#%04d#1#%05d#%%%%Page: %d %d\n",p,l++,p,p; lineout="0.707 0.707 scale 90 rotate 0 -840 translate gsave"} \
             if(i==1) { lineout="grestore 590 0 translate gsave"} \
           } \
         } \
         if(($1=="showpage")&&(i==3)) lineout=""; \
         if($0=="%%EOF") o=0; \
         if(o==1) printf "#%04d#1#%05d#%s\n",p,l++,lineout;\
       } \
       END { if(i==3) print "grestore showpage"; print "%%EOF" }' ${psfile}.ps > ${psfile}.1.tmp
       echo "  generated pre-postscript file -- ${psfile}.1.tmp -- "

  else
  echo "${psfile}.ps" | awk '{ printf "Error: could not find file \"%s\"\n",$1}'
  exit
fi

# -----------   process the double-sided option and remove the sorting index from the PS files -----
if ( test ${#2} == 0 ) then
  echo "  generating final single-sided postscript files ... "
  cat ${psfile}.0.tmp | sed 's/^#....#.#.....#//' > ${psfile}_0.ps
  cat ${psfile}.1.tmp | sed 's/^#....#.#.....#//' > ${psfile}_1.ps
  else
  if ( test $2 == "-ds" ) then
    echo "merging the two postscript files to a single double-sided postscript file ... "
    cat ${psfile}.[01].tmp | sed '/#0000#1#/d' | sort | sed 's/^#....#.#.....#//' > ${psfile}.2.tmp
    echo "  generating merged PostScript file ..."
    awk 'BEGIN { p=0} \
         { if($1 == "%%Page:") { p++; printf "%%%%Page: %d %d\n",p,p; } \
             else print $0; \
         }' ${psfile}.2.tmp > ${psfile}_book-ds.ps
    echo "  generating PDF file ...     (this may take a while ...)" 
    ./ps2pdf ${psfile}_book-ds.ps
  fi
fi

# ------- remove temporary generated files ...
rm -f ${psfile}.[012].tmp 
